v---
// Modern Hero section - unified design with the rest of the site
import { heroData, themeConfig, socialLinks } from '../data/index.js';
import Button from './ui/Button.astro';

// Prepare description with university link
const description = `${heroData.rolePrefix} <strong>${heroData.role}</strong>${heroData.roleIntroduction} <a href="${heroData.university.url}" class="university-link">${heroData.university.name}</a>.`;
---

<article class="hero-section">
  <div class="hero-container">
    <!-- Background Elements -->
    <div class="hero-background">
      <div class="hero-mesh"></div>
      <div class="hero-particles"></div>
    </div>

    <!-- Main Hero Content -->
    <div class="hero-main">
      <div class="hero-content">
        <!-- Status Badge -->
        <div class="status-badge">
          <div class="status-dot"></div>
          <span>Available for projects</span>
        </div>

        <!-- Main Title -->
        <h1 class="hero-title">
          <span class="greeting">{heroData.greeting}</span>
          <span class="name gradient-text">{heroData.name}</span>
          <span class="role-text">{heroData.subtitle}</span>
        </h1>

        <!-- Description -->
        <div class="hero-description">
          <p class="description-main" set:html={description}></p>
          
          <!-- Social Links -->
          <div class="hero-social">
            <span class="social-intro">Connect with me</span>
            <div class="social-links">
              <!-- Copy Email Button -->
              <button id="copyEmailBtn" class="social-link-button email-copy-btn" aria-label="Copy email to clipboard">
                <i class="fas fa-copy"></i>
                <span class="link-text">alejandrocabralvaldovinos@gmail.com</span>
              </button>
              
              <!-- Social Media Links -->
              <div class="social-platforms">
                {socialLinks.primary.filter(link => link.icon !== 'fa-envelope').map(link => (
                  <a href={link.url} class="social-link-button" target="_blank" rel="noopener">
                    <i class={`fab ${link.icon}`}></i>
                    <span class="link-text">{link.name}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="hero-actions">
          <Button variant="primary" size="large" href="/about#projects">
            <span class="btn-icon">ðŸš€</span>
            View My Work
          </Button>
          <button class="btn btn-secondary btn-large contact-modal-trigger">
            <span class="btn-icon">ðŸ’¼</span>
            Get In Touch
          </button>
        </div>
      </div>

      <!-- Hero Visual Element -->
      <div class="hero-visual">
        <div class="visual-card windows-terminal">
          <div class="card-header">
            <div class="window-controls windows-style">
              <span class="control minimize">âˆ’</span>
              <span class="control maximize">â–¡</span>
              <span class="control close">Ã—</span>
            </div>
            <span class="card-title">Command Prompt - C:\Users\Alejandro</span>
          </div>
          <div class="card-content terminal-content">
            <div class="terminal-prompt">
              <span class="prompt-path">C:\Users\Alejandro></span>
              <span class="prompt-command">personal_page.py</span>
            </div>
            <div class="code-block">
              <div class="code-line">
                <span class="code-keyword">const</span>
                <span class="code-variable">developer</span> = {`{`}
              </div>
              <div class="code-line indent">
                <span class="code-property">  name:</span>
                <span class="code-string">"Alejandro Cabral"</span>,
              </div>
              <div class="code-line indent">
                <span class="code-property">  languages:</span>
                <span class="code-array">["Python", "Java",  "C", "SQL"]</span>,
              </div>
              <div class="code-line indent">
                <span class="code-property">  what:</span>
                <span class="code-string">"Coding efficient solutions"</span>,
              </div>
              <div class="code-line indent">
                <span class="code-property">  available:</span>
                <span class="code-boolean">true</span>
              </div>
              <div class="code-line">{`}`};</div>
              <div class="code-line">
                <span class="code-comment">// Building neat projects!</span>
              </div>
            </div>
            <div class="terminal-cursor"></div>
          </div>
        </div>

        <!-- Stats Cards -->
        <div class="stats-cards">
          <div class="stat-card">
            <span class="stat-number">Software</span>
            <span class="stat-label">Development</span>
          </div>
          <div class="stat-card">
            <span class="stat-number">Data</span>
            <span class="stat-label">Engineering</span>
          </div>
          <div class="stat-card">
            <span class="stat-number">Available</span>
            <span class="stat-label">Remotely</span>
          </div>
        </div>
      </div>

    </div>

  </div>
</article>

<style>
  @import '../styles/sections/hero.css';
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const copyEmailBtn = document.getElementById('copyEmailBtn');
    const contactModalTrigger = document.querySelector('.contact-modal-trigger');
    
    // Copy email functionality
    if (copyEmailBtn) {
      copyEmailBtn.addEventListener('click', async function() {
        const email = 'alejandrocabralvaldovinos@gmail.com';
        
        try {
          await navigator.clipboard.writeText(email);
          
          // Visual feedback
          const icon = this.querySelector('i');
          const originalIcon = icon.className;
          const originalText = this.querySelector('.link-text').textContent;
          
          icon.className = 'fas fa-check';
          this.querySelector('.link-text').textContent = 'Email copied!';
          this.style.background = 'var(--color-success)';
          this.style.borderColor = 'var(--color-success)';
          this.style.color = 'white';
          
          setTimeout(() => {
            icon.className = originalIcon;
            this.querySelector('.link-text').textContent = originalText;
            this.style.background = '';
            this.style.borderColor = '';
            this.style.color = '';
          }, 2000);
        } catch (err) {
          // Fallback for older browsers
          const textArea = document.createElement('textarea');
          textArea.value = email;
          document.body.appendChild(textArea);
          textArea.select();
          document.execCommand('copy');
          document.body.removeChild(textArea);
          
          // Visual feedback
          const icon = this.querySelector('i');
          const originalIcon = icon.className;
          const originalText = this.querySelector('.link-text').textContent;
          
          icon.className = 'fas fa-check';
          this.querySelector('.link-text').textContent = 'Email copied!';
          
          setTimeout(() => {
            icon.className = originalIcon;
            this.querySelector('.link-text').textContent = originalText;
          }, 2000);
        }
      });
    }
    
    // Contact modal trigger
    if (contactModalTrigger && typeof window.openContactModal === 'function') {
      contactModalTrigger.addEventListener('click', function() {
        window.openContactModal();
      });
    }
  });
</script>