---
// Reusable Project Card Component
import Card from '../ui/Card.astro';
import Button from '../ui/Button.astro';

export interface Props {
  title: string;
  description: string;
  category: string;
  status: string;
  technologies: string[];
  highlights?: string[];
  image?: string;
  liveUrl?: string;
  githubUrl?: string;
  featured?: boolean;
  'data-sal'?: string;
  'data-sal-delay'?: string | number;
  'data-sal-duration'?: string | number;
}

const { 
  title,
  description,
  category,
  status,
  technologies,
  highlights = [],
  image,
  liveUrl,
  githubUrl,
  featured = false,
  ...props
} = Astro.props;

const cardClass = featured ? 'project-card--featured' : 'project-card--compact';
---

<Card variant="project" class={cardClass} {...props}>
  {featured && image && (
    <div class="project-image">
      <img src={image} alt={title} />
      <div class="project-overlay">
        <div class="project-links">
          {liveUrl && (
            <Button variant="primary" size="small" href={liveUrl} target="_blank">
              <i class="icon solid fa-external-link-alt"></i> Live Demo
            </Button>
          )}
          {githubUrl && (
            <Button variant="secondary" size="small" href={githubUrl} target="_blank">
              <i class="icon brands fa-github"></i> Code
            </Button>
          )}
        </div>
      </div>
    </div>
  )}
  
  <div class="project-content">
    <header class="project-header">
      <h4>{title}</h4>
      <div class="project-meta">
        <span class="category">{category}</span>
        <span class={`status status--${status}`}>{status}</span>
      </div>
    </header>
    
    <p>{description}</p>
    
    <div class="technologies">
      {technologies.slice(0, featured ? technologies.length : 3).map(tech => (
        <span class="tech-tag">{tech}</span>
      ))}
      {!featured && technologies.length > 3 && (
        <span class="tech-tag tech-tag--more">+{technologies.length - 3}</span>
      )}
    </div>
    
    {featured && highlights.length > 0 && (
      <div class="highlights">
        <h5>Key Features:</h5>
        <ul>
          {highlights.map(highlight => (
            <li>{highlight}</li>
          ))}
        </ul>
      </div>
    )}

    {!featured && (
      <div class="project-links">
        {liveUrl && (
          <a href={liveUrl} class="link-icon" target="_blank" rel="noopener">
            <i class="icon solid fa-external-link-alt"></i>
          </a>
        )}
        {githubUrl && (
          <a href={githubUrl} class="link-icon" target="_blank" rel="noopener">
            <i class="icon brands fa-github"></i>
          </a>
        )}
      </div>
    )}
  </div>
</Card>

<style>
  @import '../../styles/sections/project-card.css';
</style>