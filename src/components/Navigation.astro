---
// Navigation Component - Refactored for accessibility and modern practices
import { navigationData } from '../data/index.js';
import ThemeSelector from './ui/ThemeSelector.astro';
import LanguageSelector from './ui/LanguageSelector.astro';
---

<header>
  <nav 
    class="main-navigation" 
    data-main-navigation
    role="navigation" 
    aria-label="Main navigation"
  >
    <div class="nav-container">
      <!-- Brand/Logo -->
      <div class="nav-brand">
        <a href="/" class="brand-link" aria-label="Alejandro Cabral - Home">
          <span class="brand-text">Alejandro</span><span class="brand-dot">.</span><span class="brand-domain">dev</span>
        </a>
      </div>

      <!-- Desktop Navigation Menu -->
      <div class="nav-menu desktop-only" role="menubar">
        {navigationData.mainMenu.map((item, index) => (
          <a 
            href={item.href} 
            class="nav-link"
            role="menuitem"
            data-nav-link
            aria-label={`Navigate to ${item.label}`}
          >
            {item.label}
          </a>
        ))}
      </div>

      <!-- Controls Section -->
      <div class="nav-controls">
        <!-- Theme Selector -->
        <ThemeSelector />
        
        <!-- Language Selector -->
        <LanguageSelector />
        
        <!-- Mobile Menu Toggle -->
        <button 
          class="mobile-toggle"
          data-mobile-toggle
          aria-label="Toggle mobile menu"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <span class="toggle-line" aria-hidden="true"></span>
          <span class="toggle-line" aria-hidden="true"></span>
          <span class="toggle-line" aria-hidden="true"></span>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div 
      class="mobile-menu" 
      data-mobile-menu
      id="mobile-menu"
      role="menu"
      aria-labelledby="mobile-toggle"
      aria-hidden="true"
    >
      <div class="mobile-menu-content">
        <!-- Mobile Navigation Links -->
        <div class="mobile-nav-links" role="group" aria-label="Mobile navigation links">
          {navigationData.mainMenu.map((item, index) => (
            <a 
              href={item.href} 
              class="mobile-nav-link"
              role="menuitem"
              data-mobile-nav-link
              aria-label={`Navigate to ${item.label}`}
            >
              {item.label}
            </a>
          ))}
        </div>

        <!-- Mobile Controls -->
        <div class="mobile-controls">
          <div class="mobile-control-section">
            <h3 class="mobile-control-title">Theme</h3>
            <ThemeSelector />
          </div>
          
          <div class="mobile-control-section">
            <h3 class="mobile-control-title">Language</h3>
            <LanguageSelector />
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<style>
  /* Import navigation styles */
  @import '../styles/components/navigation.css';
  
  /* Enhanced accessibility and modern features */
  header {
    position: sticky;
    top: 0;
    z-index: 1000;
    width: 100%;
  }

  .main-navigation {
    width: 100%;
    background: var(--bg-glass, rgba(0, 0, 0, 0.8));
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--border-light, rgba(255, 255, 255, 0.1));
    transition: all var(--transition-normal, 0.2s ease);
  }

  .main-navigation.scrolled {
    background: var(--bg-card, rgba(17, 17, 17, 0.95));
    backdrop-filter: blur(20px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  }

  .nav-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  /* Brand section */
  .nav-brand {
    flex-shrink: 0;
  }

  .brand-link {
    display: flex;
    align-items: center;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-heading, #ffffff);
    text-decoration: none;
    transition: all var(--transition-fast, 0.15s ease);
  }

  .brand-link:hover {
    color: var(--color-primary, #3b82f6);
    transform: translateY(-1px);
  }

  .brand-link:focus {
    outline: var(--focus-ring, 2px solid var(--color-primary));
    outline-offset: var(--focus-offset, 2px);
  }

  .brand-text {
    color: var(--text-heading, #ffffff);
  }

  .brand-dot {
    color: var(--color-primary, #3b82f6);
    margin: 0 2px;
  }

  .brand-domain {
    color: var(--color-secondary, #8b5cf6);
  }

  /* Desktop navigation */
  .nav-menu {
    display: flex;
    align-items: center;
    gap: 2rem;
    flex: 1;
    justify-content: center;
  }

  .nav-link {
    color: var(--text-secondary, #cbd5e1);
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    transition: all var(--transition-fast, 0.15s ease);
    position: relative;
  }

  .nav-link:hover {
    color: var(--text-primary, #f8fafc);
    background: var(--bg-glass, rgba(0, 0, 0, 0.3));
    transform: translateY(-1px);
  }

  .nav-link:focus {
    outline: var(--focus-ring, 2px solid var(--color-primary));
    outline-offset: var(--focus-offset, 2px);
  }

  .nav-link.active {
    color: var(--color-primary, #3b82f6);
    background: var(--bg-glass, rgba(59, 130, 246, 0.1));
  }

  /* Controls section */
  .nav-controls {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-shrink: 0;
  }

  /* Mobile toggle */
  .mobile-toggle {
    display: none;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background: transparent;
    border: none;
    cursor: pointer;
    gap: 0.25rem;
    transition: all var(--transition-fast, 0.15s ease);
  }

  .mobile-toggle:focus {
    outline: var(--focus-ring, 2px solid var(--color-primary));
    outline-offset: var(--focus-offset, 2px);
    border-radius: 0.25rem;
  }

  .toggle-line {
    width: 1.5rem;
    height: 2px;
    background: var(--text-primary, #f8fafc);
    transition: all var(--transition-fast, 0.15s ease);
  }

  .mobile-toggle.active .toggle-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .mobile-toggle.active .toggle-line:nth-child(2) {
    opacity: 0;
  }

  .mobile-toggle.active .toggle-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  /* Mobile menu */
  .mobile-menu {
    position: fixed;
    top: 100%;
    left: 0;
    width: 100%;
    height: calc(100vh - 100%);
    background: var(--bg-card, rgba(17, 17, 17, 0.98));
    backdrop-filter: blur(20px);
    transform: translateY(-100%);
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-normal, 0.2s ease);
    z-index: 999;
  }

  .mobile-menu.active {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu-content {
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .mobile-nav-links {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .mobile-nav-link {
    display: block;
    padding: 1rem;
    color: var(--text-secondary, #cbd5e1);
    text-decoration: none;
    font-weight: 500;
    font-size: 1.125rem;
    border-radius: 0.5rem;
    transition: all var(--transition-fast, 0.15s ease);
  }

  .mobile-nav-link:hover,
  .mobile-nav-link:focus {
    color: var(--text-primary, #f8fafc);
    background: var(--bg-glass, rgba(0, 0, 0, 0.3));
  }

  .mobile-nav-link:focus {
    outline: var(--focus-ring, 2px solid var(--color-primary));
    outline-offset: var(--focus-offset, 2px);
  }

  .mobile-controls {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-top: auto;
    padding-top: 2rem;
    border-top: 1px solid var(--border-light, rgba(255, 255, 255, 0.1));
  }

  .mobile-control-section {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .mobile-control-title {
    color: var(--text-muted, #94a3b8);
    font-size: 0.875rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }

  /* Utility classes */
  .desktop-only {
    display: flex;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .nav-container {
      padding: 1rem;
    }

    .desktop-only {
      display: none;
    }

    .mobile-toggle {
      display: flex;
    }

    .nav-controls > :not(.mobile-toggle) {
      display: none;
    }
  }

  @media (max-width: 480px) {
    .nav-container {
      padding: 0.75rem;
    }

    .brand-link {
      font-size: 1.125rem;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .main-navigation {
      border-bottom-width: 2px;
    }

    .nav-link,
    .mobile-nav-link {
      border: 1px solid transparent;
    }

    .nav-link:hover,
    .nav-link:focus,
    .mobile-nav-link:hover,
    .mobile-nav-link:focus {
      border-color: var(--color-primary, #3b82f6);
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .main-navigation,
    .brand-link,
    .nav-link,
    .mobile-nav-link,
    .mobile-toggle,
    .toggle-line,
    .mobile-menu {
      transition: none;
    }
  }

  /* Print styles */
  @media print {
    .main-navigation {
      display: none;
    }
  }
</style>

<script>
  // Simple mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.querySelector('.mobile-toggle');
    const mobileMenu = document.querySelector('.mobile-menu');
    const body = document.body;

    toggle?.addEventListener('click', () => {
      const isOpen = mobileMenu?.classList.contains('active');
      
      if (isOpen) {
        mobileMenu?.classList.remove('active');
        toggle?.classList.remove('active');
        body.style.overflow = '';
      } else {
        mobileMenu?.classList.add('active');
        toggle?.classList.add('active');
        body.style.overflow = 'hidden';
      }
    });

    // Close menu when clicking on links
    const mobileLinks = document.querySelectorAll('.mobile-nav-link, .mobile-nav-cta');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.remove('active');
        toggle?.classList.remove('active');
        body.style.overflow = '';
      });
    });

    // Add active states for navigation
    const navLinks = document.querySelectorAll('.nav-link, .mobile-nav-link');
    
    const updateActiveLink = () => {
      const currentSection = getCurrentSection();
      navLinks.forEach(link => {
        const href = link.getAttribute('href');
        if (href === currentSection) {
          link.classList.add('active');
        } else {
          link.classList.remove('active');
        }
      });
    };

    const getCurrentSection = () => {
      const sections = document.querySelectorAll('section[id], article[id]');
      let current = '#top';
      
      sections.forEach(section => {
        const rect = section.getBoundingClientRect();
        if (rect.top <= 100) {
          current = `#${section.id}`;
        }
      });
      
      return current;
    };

    // Update active link on scroll
    window.addEventListener('scroll', updateActiveLink);
    updateActiveLink();
    
    // Cleanup function for event listeners
    function cleanup() {
      window.removeEventListener('scroll', updateActiveLink);
    }
    
    // Store cleanup function for potential future use
    window.navigationCleanup = cleanup;
  });
</script>