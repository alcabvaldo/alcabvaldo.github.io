---
// Layout component - loads all configuration from data files
import { siteConfig, scripts } from '../data/index.js';

export interface Props {
  title?: string;
  description?: string;
}

const { 
  title = siteConfig.title,
  description = siteConfig.description 
} = Astro.props;

// Get SAL.js configuration
const salConfig = scripts.external.find(lib => lib.name === "SAL.js");
---

<!DOCTYPE HTML>
<!--
	Miniport by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html lang={siteConfig.language}>
  <head>
    <title>{title}</title>
    <meta charset={siteConfig.charset} />
    <meta name="viewport" content={siteConfig.viewport} />
    <meta name="description" content={description} />
    <meta name="keywords" content={siteConfig.keywords.join(', ')} />
    <meta name="author" content={siteConfig.author} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={siteConfig.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={siteConfig.url + siteConfig.ogImage} />

    <!-- Twitter -->
    <meta property="twitter:card" content={siteConfig.twitterCard} />
    <meta property="twitter:url" content={siteConfig.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={siteConfig.url + siteConfig.ogImage} />
    
    <!-- Stylesheets -->
    {scripts.stylesheets.map(stylesheet => (
      <link rel="stylesheet" href={stylesheet.href} />
    ))}
    
    <link rel="icon" type={siteConfig.faviconType} href={siteConfig.favicon}>
  </head>
  <body class="is-preload">
    <slot />
    
    <!-- Core Scripts -->
    {scripts.core.map(script => (
      <script is:inline src={script.src}></script>
    ))}
    
    <!-- External Libraries -->
    {scripts.external.map(library => (
      <script is:inline src={library.js}></script>
    ))}
    
    <!-- SAL.js Initialization -->
    {salConfig && (
      <script is:inline set:html={salConfig.initCode}></script>
    )}
  </body>
</html>